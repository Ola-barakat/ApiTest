<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="9" passed="9" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-10-22T11:29:44 EET" name="Test-Suite" finished-at="2024-10-22T11:29:57 EET" duration-ms="12851">
    <groups>
    </groups>
    <test started-at="2024-10-22T11:29:44 EET" name="Default test" finished-at="2024-10-22T11:29:57 EET" duration-ms="12851">
      <class name="api.PostDuplicateBrands">
        <test-method signature="checkNoDuplicateDataCreation()[pri:0, instance:api.PostDuplicateBrands@45f45fa1]" started-at="2024-10-22T11:29:54 EET" name="checkNoDuplicateDataCreation" finished-at="2024-10-22T11:29:55 EET" duration-ms="1016" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNoDuplicateDataCreation -->
      </class> <!-- api.PostDuplicateBrands -->
      <class name="api.ListOfBrands">
        <test-method signature="check_That_each_Brand_Object_contains_id_and_name()[pri:0, instance:api.ListOfBrands@568bf312]" started-at="2024-10-22T11:29:44 EET" name="check_That_each_Brand_Object_contains_id_and_name" finished-at="2024-10-22T11:29:49 EET" duration-ms="4814" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- check_That_each_Brand_Object_contains_id_and_name -->
        <test-method signature="check_that_listofbrands_has_more_than_one_entry()[pri:0, instance:api.ListOfBrands@568bf312]" started-at="2024-10-22T11:29:49 EET" name="check_that_listofbrands_has_more_than_one_entry" finished-at="2024-10-22T11:29:51 EET" duration-ms="2369" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- check_that_listofbrands_has_more_than_one_entry -->
        <test-method signature="validate_StatusCode()[pri:0, instance:api.ListOfBrands@568bf312]" started-at="2024-10-22T11:29:51 EET" name="validate_StatusCode" finished-at="2024-10-22T11:29:53 EET" duration-ms="1320" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validate_StatusCode -->
      </class> <!-- api.ListOfBrands -->
      <class name="api.UpdatOrDeletNoExistBrand">
        <test-method signature="deleteBrandNotExistsID()[pri:0, instance:api.UpdatOrDeletNoExistBrand@4c6e276e]" started-at="2024-10-22T11:29:55 EET" name="deleteBrandNotExistsID" finished-at="2024-10-22T11:29:56 EET" duration-ms="665" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBrandNotExistsID -->
        <test-method signature="updateBrandNotExistsID()[pri:0, instance:api.UpdatOrDeletNoExistBrand@4c6e276e]" started-at="2024-10-22T11:29:56 EET" name="updateBrandNotExistsID" finished-at="2024-10-22T11:29:57 EET" duration-ms="671" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateBrandNotExistsID -->
      </class> <!-- api.UpdatOrDeletNoExistBrand -->
      <class name="api.GetBrandNotExists">
        <test-method signature="getBrandNotExists()[pri:0, instance:api.GetBrandNotExists@589b3632]" started-at="2024-10-22T11:29:54 EET" name="getBrandNotExists" finished-at="2024-10-22T11:29:54 EET" duration-ms="555" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getBrandNotExists -->
      </class> <!-- api.GetBrandNotExists -->
      <class name="api.GetBrandById">
        <test-method signature="checkBrandNameForSpecificID()[pri:0, instance:api.GetBrandById@ca263c2]" started-at="2024-10-22T11:29:53 EET" name="checkBrandNameForSpecificID" finished-at="2024-10-22T11:29:53 EET" duration-ms="661" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBrandNameForSpecificID -->
        <test-method signature="checkStatusCodeForReqID()[pri:0, instance:api.GetBrandById@ca263c2]" started-at="2024-10-22T11:29:53 EET" name="checkStatusCodeForReqID" finished-at="2024-10-22T11:29:54 EET" duration-ms="711" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCodeForReqID -->
      </class> <!-- api.GetBrandById -->
    </test> <!-- Default test -->
  </suite> <!-- Test-Suite -->
</testng-results>
